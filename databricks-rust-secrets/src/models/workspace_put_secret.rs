use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(JsonSchema, Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkspacePutSecret {
    /// If specified, value will be stored as bytes.
    #[serde(rename = "bytes_value", skip_serializing_if = "Option::is_none")]
    pub bytes_value: Option<String>,
    /// A unique name to identify the secret.
    #[serde(rename = "key")]
    pub key: String,
    /// The name of the scope to which the secret will be associated with.
    #[serde(rename = "scope")]
    pub scope: String,
    /// If specified, note that the value will be stored in UTF-8 (MB4) form.
    #[serde(rename = "string_value", skip_serializing_if = "Option::is_none")]
    pub string_value: Option<String>,
}

impl WorkspacePutSecret {
    pub fn new(key: String, scope: String) -> WorkspacePutSecret {
        WorkspacePutSecret {
            bytes_value: None,
            key,
            scope,
            string_value: None,
        }
    }
}

