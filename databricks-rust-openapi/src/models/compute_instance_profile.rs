use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeInstanceProfile {
    /// The AWS IAM role ARN of the role associated with the instance profile. This field is required if your role name and instance profile name do not match and you want to use the instance profile with [Databricks SQL Serverless](https://Docsdatabricks.com/sql/admin/serverless.html).  Otherwise, this field is optional. 
    #[serde(rename = "iam_role_arn", skip_serializing_if = "Option::is_none")]
    pub iam_role_arn: Option<String>,
    /// The AWS ARN of the instance profile to register with Databricks. This field is required.
    #[serde(rename = "instance_profile_arn")]
    pub instance_profile_arn: String,
    /// Boolean flag indicating whether the instance profile should only be used in credential passthrough scenarios. If true, it means the instance profile contains an meta IAM role which could assume a wide range of roles. Therefore it should always be used with authorization. This field is optional, the default value is `false`. 
    #[serde(rename = "is_meta_instance_profile", skip_serializing_if = "Option::is_none")]
    pub is_meta_instance_profile: Option<bool>,
}

impl ComputeInstanceProfile {
    pub fn new(instance_profile_arn: String) -> ComputeInstanceProfile {
        ComputeInstanceProfile {
            iam_role_arn: None,
            instance_profile_arn,
            is_meta_instance_profile: None,
        }
    }
}


