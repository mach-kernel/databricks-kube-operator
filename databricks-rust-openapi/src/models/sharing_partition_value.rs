use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SharingPartitionValue {
    /// The name of the partition column.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The operator to apply for the value.
    #[serde(rename = "op", skip_serializing_if = "Option::is_none")]
    pub op: Option<Op>,
    /// The key of a Delta Sharing recipient's property. For example `databricks-account-id`. When this field is set, field `value` can not be set.
    #[serde(rename = "recipient_property_key", skip_serializing_if = "Option::is_none")]
    pub recipient_property_key: Option<String>,
    /// The value of the partition column. When this value is not set, it means `null` value. When this field is set, field `recipient_property_key` can not be set.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

impl SharingPartitionValue {
    pub fn new() -> SharingPartitionValue {
        SharingPartitionValue {
            name: None,
            op: None,
            recipient_property_key: None,
            value: None,
        }
    }
}

/// The operator to apply for the value.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Op {
    #[serde(rename = "EQUAL")]
    Equal,
    #[serde(rename = "LIKE")]
    Like,
}

impl Default for Op {
    fn default() -> Op {
        Self::Equal
    }
}

