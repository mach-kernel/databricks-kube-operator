use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlWarehouseTypePair {
    /// If set to false the specific warehouse type will not be be allowed as a value for warehouse_type in CreateWarehouse and EditWarehouse
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// Warehouse type: `PRO` or `CLASSIC`.
    #[serde(rename = "warehouse_type", skip_serializing_if = "Option::is_none")]
    pub warehouse_type: Option<WarehouseType>,
}

impl SqlWarehouseTypePair {
    pub fn new() -> SqlWarehouseTypePair {
        SqlWarehouseTypePair {
            enabled: None,
            warehouse_type: None,
        }
    }
}

/// Warehouse type: `PRO` or `CLASSIC`.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WarehouseType {
    #[serde(rename = "TYPE_UNSPECIFIED")]
    TypeUnspecified,
    #[serde(rename = "CLASSIC")]
    Classic,
    #[serde(rename = "PRO")]
    Pro,
}

impl Default for WarehouseType {
    fn default() -> WarehouseType {
        Self::TypeUnspecified
    }
}

