use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MlCreateExperiment {
    /// Location where all artifacts for the experiment are stored. If not provided, the remote server will select an appropriate default.
    #[serde(rename = "artifact_location", skip_serializing_if = "Option::is_none")]
    pub artifact_location: Option<String>,
    /// Experiment name.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::MlExperimentTag>>,
}

impl MlCreateExperiment {
    pub fn new(name: String) -> MlCreateExperiment {
        MlCreateExperiment {
            artifact_location: None,
            name,
            tags: None,
        }
    }
}


