use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkspaceSecretScope {
    /// The type of secret scope backend.
    #[serde(rename = "backend_type", skip_serializing_if = "Option::is_none")]
    pub backend_type: Option<crate::models::WorkspaceScopeBackendType>,
    /// The metadata for the secret scope if the type is `AZURE_KEYVAULT`
    #[serde(rename = "keyvault_metadata", skip_serializing_if = "Option::is_none")]
    pub keyvault_metadata: Option<Box<crate::models::WorkspaceAzureKeyVaultSecretScopeMetadata>>,
    /// A unique name to identify the secret scope.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl WorkspaceSecretScope {
    pub fn new() -> WorkspaceSecretScope {
        WorkspaceSecretScope {
            backend_type: None,
            keyvault_metadata: None,
            name: None,
        }
    }
}


