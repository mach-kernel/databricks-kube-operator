use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkspaceCreateRepo {
    /// Desired path for the repo in the workspace. Must be in the format /Repos/{folder}/{repo-name}.
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    /// Git provider. This field is case-insensitive. The available Git providers are gitHub, bitbucketCloud, gitLab, azureDevOpsServices, gitHubEnterprise, bitbucketServer, gitLabEnterpriseEdition and awsCodeCommit.
    #[serde(rename = "provider")]
    pub provider: String,
    /// If specified, the repo will be created with sparse checkout enabled. You cannot enable/disable sparse checkout after the repo is created.
    #[serde(rename = "sparse_checkout", skip_serializing_if = "Option::is_none")]
    pub sparse_checkout: Option<Box<crate::models::WorkspaceSparseCheckout>>,
    /// URL of the Git repository to be linked.
    #[serde(rename = "url")]
    pub url: String,
}

impl WorkspaceCreateRepo {
    pub fn new(provider: String, url: String) -> WorkspaceCreateRepo {
        WorkspaceCreateRepo {
            path: None,
            provider,
            sparse_checkout: None,
            url,
        }
    }
}


