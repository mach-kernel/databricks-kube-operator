use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PipelinesPipelineEvent {
    /// The display message associated with the event.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// Describes where the event originates from.
    #[serde(rename = "origin", skip_serializing_if = "Option::is_none")]
    pub origin: Option<Box<crate::models::PipelinesOrigin>>,
    /// Information about an error captured by the event.
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<crate::models::PipelinesErrorDetail>>,
    /// A time-based, globally unique id.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The time of the event.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    /// The event type. Should always correspond to the details
    #[serde(rename = "event_type", skip_serializing_if = "Option::is_none")]
    pub event_type: Option<String>,
    /// The severity level of the event.
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<crate::models::PipelinesEventLevel>,
    /// A sequencing object to identify and order events.
    #[serde(rename = "sequence", skip_serializing_if = "Option::is_none")]
    pub sequence: Option<Box<crate::models::PipelinesSequencing>>,
    /// Maturity level for event_type.
    #[serde(rename = "maturity_level", skip_serializing_if = "Option::is_none")]
    pub maturity_level: Option<crate::models::PipelinesMaturityLevel>,
}

impl PipelinesPipelineEvent {
    pub fn new() -> PipelinesPipelineEvent {
        PipelinesPipelineEvent {
            message: None,
            origin: None,
            error: None,
            id: None,
            timestamp: None,
            event_type: None,
            level: None,
            sequence: None,
            maturity_level: None,
        }
    }
}


