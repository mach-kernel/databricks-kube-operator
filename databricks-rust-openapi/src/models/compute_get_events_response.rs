use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeGetEventsResponse {
    #[serde(rename = "events", skip_serializing_if = "Option::is_none")]
    pub events: Option<Vec<crate::models::ComputeClusterEvent>>,
    /// The parameters required to retrieve the next page of events. Omitted if there are no more events to read.
    #[serde(rename = "next_page", skip_serializing_if = "Option::is_none")]
    pub next_page: Option<Box<crate::models::ComputeGetEvents>>,
    /// The total number of events filtered by the start_time, end_time, and event_types.
    #[serde(rename = "total_count", skip_serializing_if = "Option::is_none")]
    pub total_count: Option<i64>,
}

impl ComputeGetEventsResponse {
    pub fn new() -> ComputeGetEventsResponse {
        ComputeGetEventsResponse {
            events: None,
            next_page: None,
            total_count: None,
        }
    }
}


