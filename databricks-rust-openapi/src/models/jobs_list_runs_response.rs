use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsListRunsResponse {
    /// If true, additional runs matching the provided filter are available for listing.
    #[serde(rename = "has_more", skip_serializing_if = "Option::is_none")]
    pub has_more: Option<bool>,
    /// A token that can be used to list the next page of runs.
    #[serde(rename = "next_page_token", skip_serializing_if = "Option::is_none")]
    pub next_page_token: Option<String>,
    /// A token that can be used to list the previous page of runs.
    #[serde(rename = "prev_page_token", skip_serializing_if = "Option::is_none")]
    pub prev_page_token: Option<String>,
    #[serde(rename = "runs", skip_serializing_if = "Option::is_none")]
    pub runs: Option<Vec<crate::models::JobsBaseRun>>,
}

impl JobsListRunsResponse {
    pub fn new() -> JobsListRunsResponse {
        JobsListRunsResponse {
            has_more: None,
            next_page_token: None,
            prev_page_token: None,
            runs: None,
        }
    }
}


