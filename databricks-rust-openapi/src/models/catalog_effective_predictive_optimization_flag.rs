use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogEffectivePredictiveOptimizationFlag {
    /// The name of the object from which the flag was inherited. If there was no inheritance, this field is left blank.
    #[serde(rename = "inherited_from_name", skip_serializing_if = "Option::is_none")]
    pub inherited_from_name: Option<String>,
    /// The type of the object from which the flag was inherited. If there was no inheritance, this field is left blank.
    #[serde(rename = "inherited_from_type", skip_serializing_if = "Option::is_none")]
    pub inherited_from_type: Option<InheritedFromType>,
    #[serde(rename = "value")]
    pub value: crate::models::CatalogEnablePredictiveOptimization,
}

impl CatalogEffectivePredictiveOptimizationFlag {
    pub fn new(value: crate::models::CatalogEnablePredictiveOptimization) -> CatalogEffectivePredictiveOptimizationFlag {
        CatalogEffectivePredictiveOptimizationFlag {
            inherited_from_name: None,
            inherited_from_type: None,
            value,
        }
    }
}

/// The type of the object from which the flag was inherited. If there was no inheritance, this field is left blank.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InheritedFromType {
    #[serde(rename = "CATALOG")]
    Catalog,
    #[serde(rename = "SCHEMA")]
    Schema,
}

impl Default for InheritedFromType {
    fn default() -> InheritedFromType {
        Self::Catalog
    }
}

