use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PipelinesPipelineLibrary {
    /// The path to a file that defines a pipeline and is stored in the Databricks Repos. 
    #[serde(rename = "file", skip_serializing_if = "Option::is_none")]
    pub file: Option<Box<crate::models::PipelinesFileLibrary>>,
    /// URI of the jar to be installed. Currently only DBFS is supported. 
    #[serde(rename = "jar", skip_serializing_if = "Option::is_none")]
    pub jar: Option<String>,
    /// Specification of a maven library to be installed. 
    #[serde(rename = "maven", skip_serializing_if = "Option::is_none")]
    pub maven: Option<Box<crate::models::ComputeMavenLibrary>>,
    /// The path to a notebook that defines a pipeline and is stored in the <Databricks> workspace. 
    #[serde(rename = "notebook", skip_serializing_if = "Option::is_none")]
    pub notebook: Option<Box<crate::models::PipelinesNotebookLibrary>>,
}

impl PipelinesPipelineLibrary {
    pub fn new() -> PipelinesPipelineLibrary {
        PipelinesPipelineLibrary {
            file: None,
            jar: None,
            maven: None,
            notebook: None,
        }
    }
}


