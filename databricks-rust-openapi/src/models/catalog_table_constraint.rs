use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CatalogTableConstraint : A table constraint, as defined by *one* of the following fields being set: __primary_key_constraint__, __foreign_key_constraint__, __named_table_constraint__. 



#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogTableConstraint {
    #[serde(rename = "foreign_key_constraint", skip_serializing_if = "Option::is_none")]
    pub foreign_key_constraint: Option<Box<crate::models::CatalogForeignKeyConstraint>>,
    #[serde(rename = "named_table_constraint", skip_serializing_if = "Option::is_none")]
    pub named_table_constraint: Option<Box<crate::models::CatalogNamedTableConstraint>>,
    #[serde(rename = "primary_key_constraint", skip_serializing_if = "Option::is_none")]
    pub primary_key_constraint: Option<Box<crate::models::CatalogPrimaryKeyConstraint>>,
}

impl CatalogTableConstraint {
    /// A table constraint, as defined by *one* of the following fields being set: __primary_key_constraint__, __foreign_key_constraint__, __named_table_constraint__. 
    pub fn new() -> CatalogTableConstraint {
        CatalogTableConstraint {
            foreign_key_constraint: None,
            named_table_constraint: None,
            primary_key_constraint: None,
        }
    }
}


