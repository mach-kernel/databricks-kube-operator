use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// JobsRunIf : This describes an enum

/// This describes an enum
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobsRunIf {
    #[serde(rename = "ALL_SUCCESS")]
    AllSuccess,
    #[serde(rename = "AT_LEAST_ONE_SUCCESS")]
    AtLeastOneSuccess,
    #[serde(rename = "NONE_FAILED")]
    NoneFailed,
    #[serde(rename = "ALL_DONE")]
    AllDone,
    #[serde(rename = "AT_LEAST_ONE_FAILED")]
    AtLeastOneFailed,
    #[serde(rename = "ALL_FAILED")]
    AllFailed,

}

impl ToString for JobsRunIf {
    fn to_string(&self) -> String {
        match self {
            Self::AllSuccess => String::from("ALL_SUCCESS"),
            Self::AtLeastOneSuccess => String::from("AT_LEAST_ONE_SUCCESS"),
            Self::NoneFailed => String::from("NONE_FAILED"),
            Self::AllDone => String::from("ALL_DONE"),
            Self::AtLeastOneFailed => String::from("AT_LEAST_ONE_FAILED"),
            Self::AllFailed => String::from("ALL_FAILED"),
        }
    }
}

impl Default for JobsRunIf {
    fn default() -> JobsRunIf {
        Self::AllSuccess
    }
}




