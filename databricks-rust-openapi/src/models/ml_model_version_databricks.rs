use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MlModelVersionDatabricks {
    /// The username of the user that created the object.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::MlModelVersionTag>>,
    /// Name of the model.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::Mlstatus>,
    /// URL of the run associated with the model artifacts. This field is set at model version creation time only for model versions whose source run is from a tracking server that is different from the registry server.
    #[serde(rename = "run_link", skip_serializing_if = "Option::is_none")]
    pub run_link: Option<String>,
    /// URI that indicates the location of the source model artifacts. This is used when creating the model version.
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
    /// Unique identifier for the MLflow tracking run associated with the source model artifacts.
    #[serde(rename = "run_id", skip_serializing_if = "Option::is_none")]
    pub run_id: Option<String>,
    /// Details on the current status, for example why registration failed.
    #[serde(rename = "status_message", skip_serializing_if = "Option::is_none")]
    pub status_message: Option<String>,
    /// Version of the model.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// Time of the object at last update, as a Unix timestamp in milliseconds.
    #[serde(rename = "last_updated_timestamp", skip_serializing_if = "Option::is_none")]
    pub last_updated_timestamp: Option<i64>,
    /// Creation time of the object, as a Unix timestamp in milliseconds.
    #[serde(rename = "creation_timestamp", skip_serializing_if = "Option::is_none")]
    pub creation_timestamp: Option<i64>,
    /// User-specified description for the object.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "permission_level", skip_serializing_if = "Option::is_none")]
    pub permission_level: Option<crate::models::MlPermissionLevel>,
    #[serde(rename = "current_stage", skip_serializing_if = "Option::is_none")]
    pub current_stage: Option<crate::models::Mlstage>,
}

impl MlModelVersionDatabricks {
    pub fn new() -> MlModelVersionDatabricks {
        MlModelVersionDatabricks {
            user_id: None,
            tags: None,
            name: None,
            status: None,
            run_link: None,
            source: None,
            run_id: None,
            status_message: None,
            version: None,
            last_updated_timestamp: None,
            creation_timestamp: None,
            description: None,
            permission_level: None,
            current_stage: None,
        }
    }
}


