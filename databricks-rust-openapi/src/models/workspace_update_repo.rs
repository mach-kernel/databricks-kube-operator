use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkspaceUpdateRepo {
    /// Branch that the local version of the repo is checked out to.
    #[serde(rename = "branch", skip_serializing_if = "Option::is_none")]
    pub branch: Option<String>,
    /// If specified, update the sparse checkout settings. The update will fail if sparse checkout is not enabled for the repo.
    #[serde(rename = "sparse_checkout", skip_serializing_if = "Option::is_none")]
    pub sparse_checkout: Option<Box<crate::models::WorkspaceSparseCheckoutUpdate>>,
    /// Tag that the local version of the repo is checked out to. Updating the repo to a tag puts the repo in a detached HEAD state. Before committing new changes, you must update the repo to a branch instead of the detached HEAD.
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
}

impl WorkspaceUpdateRepo {
    pub fn new() -> WorkspaceUpdateRepo {
        WorkspaceUpdateRepo {
            branch: None,
            sparse_checkout: None,
            tag: None,
        }
    }
}


