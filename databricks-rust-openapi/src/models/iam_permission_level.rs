use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IamPermissionLevel : Permission level

/// Permission level
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IamPermissionLevel {
    #[serde(rename = "CAN_MANAGE")]
    CanManage,
    #[serde(rename = "CAN_RESTART")]
    CanRestart,
    #[serde(rename = "CAN_ATTACH_TO")]
    CanAttachTo,
    #[serde(rename = "IS_OWNER")]
    IsOwner,
    #[serde(rename = "CAN_MANAGE_RUN")]
    CanManageRun,
    #[serde(rename = "CAN_VIEW")]
    CanView,
    #[serde(rename = "CAN_READ")]
    CanRead,
    #[serde(rename = "CAN_RUN")]
    CanRun,
    #[serde(rename = "CAN_EDIT")]
    CanEdit,
    #[serde(rename = "CAN_USE")]
    CanUse,
    #[serde(rename = "CAN_MANAGE_STAGING_VERSIONS")]
    CanManageStagingVersions,
    #[serde(rename = "CAN_MANAGE_PRODUCTION_VERSIONS")]
    CanManageProductionVersions,
    #[serde(rename = "CAN_EDIT_METADATA")]
    CanEditMetadata,
    #[serde(rename = "CAN_VIEW_METADATA")]
    CanViewMetadata,
    #[serde(rename = "CAN_BIND")]
    CanBind,

}

impl ToString for IamPermissionLevel {
    fn to_string(&self) -> String {
        match self {
            Self::CanManage => String::from("CAN_MANAGE"),
            Self::CanRestart => String::from("CAN_RESTART"),
            Self::CanAttachTo => String::from("CAN_ATTACH_TO"),
            Self::IsOwner => String::from("IS_OWNER"),
            Self::CanManageRun => String::from("CAN_MANAGE_RUN"),
            Self::CanView => String::from("CAN_VIEW"),
            Self::CanRead => String::from("CAN_READ"),
            Self::CanRun => String::from("CAN_RUN"),
            Self::CanEdit => String::from("CAN_EDIT"),
            Self::CanUse => String::from("CAN_USE"),
            Self::CanManageStagingVersions => String::from("CAN_MANAGE_STAGING_VERSIONS"),
            Self::CanManageProductionVersions => String::from("CAN_MANAGE_PRODUCTION_VERSIONS"),
            Self::CanEditMetadata => String::from("CAN_EDIT_METADATA"),
            Self::CanViewMetadata => String::from("CAN_VIEW_METADATA"),
            Self::CanBind => String::from("CAN_BIND"),
        }
    }
}

impl Default for IamPermissionLevel {
    fn default() -> IamPermissionLevel {
        Self::CanManage
    }
}




