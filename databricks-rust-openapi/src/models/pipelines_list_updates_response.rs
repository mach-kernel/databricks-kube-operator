use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PipelinesListUpdatesResponse {
    /// If present, then there are more results, and this a token to be used in a subsequent request to fetch the next page.
    #[serde(rename = "next_page_token", skip_serializing_if = "Option::is_none")]
    pub next_page_token: Option<String>,
    /// If present, then this token can be used in a subsequent request to fetch the previous page.
    #[serde(rename = "prev_page_token", skip_serializing_if = "Option::is_none")]
    pub prev_page_token: Option<String>,
    #[serde(rename = "updates", skip_serializing_if = "Option::is_none")]
    pub updates: Option<Vec<crate::models::PipelinesUpdateInfo>>,
}

impl PipelinesListUpdatesResponse {
    pub fn new() -> PipelinesListUpdatesResponse {
        PipelinesListUpdatesResponse {
            next_page_token: None,
            prev_page_token: None,
            updates: None,
        }
    }
}


