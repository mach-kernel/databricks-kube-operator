use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeGlobalInitScriptDetailsWithContent {
    /// The global init script ID.
    #[serde(rename = "script_id", skip_serializing_if = "Option::is_none")]
    pub script_id: Option<String>,
    /// Specifies whether the script is enabled. The script runs only if enabled.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// The username of the user who created the script.
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    /// The position of a script, where 0 represents the first script to run, 1 is the second script to run, in ascending order.
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    /// The name of the script
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The Base64-encoded content of the script.
    #[serde(rename = "script", skip_serializing_if = "Option::is_none")]
    pub script: Option<String>,
    /// Time when the script was updated, represented as a Unix timestamp in milliseconds.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i32>,
    /// Time when the script was created, represented as a Unix timestamp in milliseconds.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i32>,
    /// The username of the user who last updated the script
    #[serde(rename = "updated_by", skip_serializing_if = "Option::is_none")]
    pub updated_by: Option<String>,
}

impl ComputeGlobalInitScriptDetailsWithContent {
    pub fn new() -> ComputeGlobalInitScriptDetailsWithContent {
        ComputeGlobalInitScriptDetailsWithContent {
            script_id: None,
            enabled: None,
            created_by: None,
            position: None,
            name: None,
            script: None,
            updated_at: None,
            created_at: None,
            updated_by: None,
        }
    }
}


