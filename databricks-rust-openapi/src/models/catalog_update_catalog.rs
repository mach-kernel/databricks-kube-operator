use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogUpdateCatalog {
    /// User-provided free-form text description.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "isolation_mode", skip_serializing_if = "Option::is_none")]
    pub isolation_mode: Option<crate::models::CatalogIsolationMode>,
    /// Name of catalog.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Username of current owner of catalog.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// A map of key-value properties attached to the securable.
    #[serde(rename = "properties", default, skip_serializing_if = "Option::is_none")]
    pub properties: Option<::std::collections::HashMap<String, String>>,
}

impl CatalogUpdateCatalog {
    pub fn new() -> CatalogUpdateCatalog {
        CatalogUpdateCatalog {
            comment: None,
            isolation_mode: None,
            name: None,
            owner: None,
            properties: None,
        }
    }
}


