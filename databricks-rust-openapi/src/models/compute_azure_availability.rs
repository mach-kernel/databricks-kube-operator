use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ComputeAzureAvailability : Availability type used for all subsequent nodes past the `first_on_demand` ones. Note: If `first_on_demand` is zero (which only happens on pool clusters), this availability type will be used for the entire cluster.

/// Availability type used for all subsequent nodes past the `first_on_demand` ones. Note: If `first_on_demand` is zero (which only happens on pool clusters), this availability type will be used for the entire cluster.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ComputeAzureAvailability {
    #[serde(rename = "SPOT_AZURE")]
    SpotAzure,
    #[serde(rename = "ON_DEMAND_AZURE")]
    OnDemandAzure,
    #[serde(rename = "SPOT_WITH_FALLBACK_AZURE")]
    SpotWithFallbackAzure,

}

impl ToString for ComputeAzureAvailability {
    fn to_string(&self) -> String {
        match self {
            Self::SpotAzure => String::from("SPOT_AZURE"),
            Self::OnDemandAzure => String::from("ON_DEMAND_AZURE"),
            Self::SpotWithFallbackAzure => String::from("SPOT_WITH_FALLBACK_AZURE"),
        }
    }
}

impl Default for ComputeAzureAvailability {
    fn default() -> ComputeAzureAvailability {
        Self::SpotAzure
    }
}




