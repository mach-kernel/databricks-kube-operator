use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MlModel {
    /// Timestamp recorded when this `registered_model` was created.
    #[serde(rename = "creation_timestamp", skip_serializing_if = "Option::is_none")]
    pub creation_timestamp: Option<i64>,
    /// Description of this `registered_model`.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Timestamp recorded when metadata for this `registered_model` was last updated.
    #[serde(rename = "last_updated_timestamp", skip_serializing_if = "Option::is_none")]
    pub last_updated_timestamp: Option<i64>,
    #[serde(rename = "latest_versions", skip_serializing_if = "Option::is_none")]
    pub latest_versions: Option<Vec<crate::models::MlModelVersion>>,
    /// Unique name for the model.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::MlModelTag>>,
    /// User that created this `registered_model`
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
}

impl MlModel {
    pub fn new() -> MlModel {
        MlModel {
            creation_timestamp: None,
            description: None,
            last_updated_timestamp: None,
            latest_versions: None,
            name: None,
            tags: None,
            user_id: None,
        }
    }
}


