use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsRunConditionTask {
    /// The left operand of the condition task.
    #[serde(rename = "left")]
    pub left: String,
    /// The condtion task operator.
    #[serde(rename = "op")]
    pub op: Op,
    /// The condition expression evaluation result. Filled in if the task was successfully completed. Can be `\"true\"` or `\"false\"` 
    #[serde(rename = "outcome", skip_serializing_if = "Option::is_none")]
    pub outcome: Option<String>,
    /// The right operand of the condition task.
    #[serde(rename = "right")]
    pub right: String,
}

impl JobsRunConditionTask {
    pub fn new(left: String, op: Op, right: String) -> JobsRunConditionTask {
        JobsRunConditionTask {
            left,
            op,
            outcome: None,
            right,
        }
    }
}

/// The condtion task operator.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Op {
    #[serde(rename = "EQUAL_TO")]
    EqualTo,
    #[serde(rename = "GREATER_THAN")]
    GreaterThan,
    #[serde(rename = "GREATER_THAN_OR_EQUAL")]
    GreaterThanOrEqual,
    #[serde(rename = "LESS_THAN")]
    LessThan,
    #[serde(rename = "LESS_THAN_OR_EQUAL")]
    LessThanOrEqual,
    #[serde(rename = "NOT_EQUAL")]
    NotEqual,
}

impl Default for Op {
    fn default() -> Op {
        Self::EqualTo
    }
}

