use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SqlResultData : Result data chunks are delivered in either the `chunk` field when using `INLINE` disposition, or in the `external_link` field when using `EXTERNAL_LINKS` disposition. Exactly one of these will be set. 



#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlResultData {
    /// Number of bytes in the result chunk.
    #[serde(rename = "byte_count", skip_serializing_if = "Option::is_none")]
    pub byte_count: Option<i64>,
    /// Position within the sequence of result set chunks.
    #[serde(rename = "chunk_index", skip_serializing_if = "Option::is_none")]
    pub chunk_index: Option<i32>,
    #[serde(rename = "data_array", skip_serializing_if = "Option::is_none")]
    pub data_array: Option<Vec<Vec<String>>>,
    #[serde(rename = "external_links", skip_serializing_if = "Option::is_none")]
    pub external_links: Option<Vec<crate::models::SqlExternalLink>>,
    /// When fetching, gives `chunk_index` for the _next_ chunk; if absent, indicates there are no more chunks.
    #[serde(rename = "next_chunk_index", skip_serializing_if = "Option::is_none")]
    pub next_chunk_index: Option<i32>,
    /// When fetching, gives `internal_link` for the _next_ chunk; if absent, indicates there are no more chunks.
    #[serde(rename = "next_chunk_internal_link", skip_serializing_if = "Option::is_none")]
    pub next_chunk_internal_link: Option<String>,
    /// Number of rows within the result chunk.
    #[serde(rename = "row_count", skip_serializing_if = "Option::is_none")]
    pub row_count: Option<i64>,
    /// Starting row offset within the result set.
    #[serde(rename = "row_offset", skip_serializing_if = "Option::is_none")]
    pub row_offset: Option<i64>,
}

impl SqlResultData {
    /// Result data chunks are delivered in either the `chunk` field when using `INLINE` disposition, or in the `external_link` field when using `EXTERNAL_LINKS` disposition. Exactly one of these will be set. 
    pub fn new() -> SqlResultData {
        SqlResultData {
            byte_count: None,
            chunk_index: None,
            data_array: None,
            external_links: None,
            next_chunk_index: None,
            next_chunk_internal_link: None,
            row_count: None,
            row_offset: None,
        }
    }
}


