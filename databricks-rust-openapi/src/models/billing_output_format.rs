use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BillingOutputFormat : The file type of log delivery.  *  If `log_type` is `BILLABLE_USAGE`, this value must be `CSV`. Only the CSV (comma-separated values) format is supported. For the schema, see the [View billable usage](https://Docsdatabricks.com/administration-guide/account-settings/usage.html) * If `log_type` is `AUDIT_LOGS`, this value must be `JSON`. Only the JSON (JavaScript Object Notation) format is supported. For the schema, see the [Configuring audit logs](https://Docsdatabricks.com/administration-guide/account-settings/audit-logs.html).

/// The file type of log delivery.  *  If `log_type` is `BILLABLE_USAGE`, this value must be `CSV`. Only the CSV (comma-separated values) format is supported. For the schema, see the [View billable usage](https://Docsdatabricks.com/administration-guide/account-settings/usage.html) * If `log_type` is `AUDIT_LOGS`, this value must be `JSON`. Only the JSON (JavaScript Object Notation) format is supported. For the schema, see the [Configuring audit logs](https://Docsdatabricks.com/administration-guide/account-settings/audit-logs.html).
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BillingOutputFormat {
    #[serde(rename = "CSV")]
    Csv,
    #[serde(rename = "JSON")]
    Json,

}

impl ToString for BillingOutputFormat {
    fn to_string(&self) -> String {
        match self {
            Self::Csv => String::from("CSV"),
            Self::Json => String::from("JSON"),
        }
    }
}

impl Default for BillingOutputFormat {
    fn default() -> BillingOutputFormat {
        Self::Csv
    }
}




