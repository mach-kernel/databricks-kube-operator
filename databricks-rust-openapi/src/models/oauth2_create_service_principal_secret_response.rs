use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Oauth2CreateServicePrincipalSecretResponse {
    /// UTC time when the secret was created
    #[serde(rename = "create_time", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<String>,
    /// ID of the secret
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Secret Value
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// Secret Hash
    #[serde(rename = "secret_hash", skip_serializing_if = "Option::is_none")]
    pub secret_hash: Option<String>,
    /// Status of the secret
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// UTC time when the secret was updated
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
}

impl Oauth2CreateServicePrincipalSecretResponse {
    pub fn new() -> Oauth2CreateServicePrincipalSecretResponse {
        Oauth2CreateServicePrincipalSecretResponse {
            create_time: None,
            id: None,
            secret: None,
            secret_hash: None,
            status: None,
            update_time: None,
        }
    }
}


