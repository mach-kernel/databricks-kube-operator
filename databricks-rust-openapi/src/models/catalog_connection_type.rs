use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CatalogConnectionType : The type of connection.

/// The type of connection.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CatalogConnectionType {
    #[serde(rename = "MYSQL")]
    Mysql,
    #[serde(rename = "POSTGRESQL")]
    Postgresql,
    #[serde(rename = "SNOWFLAKE")]
    Snowflake,
    #[serde(rename = "REDSHIFT")]
    Redshift,
    #[serde(rename = "SQLDW")]
    Sqldw,
    #[serde(rename = "SQLSERVER")]
    Sqlserver,
    #[serde(rename = "DATABRICKS")]
    Databricks,

}

impl ToString for CatalogConnectionType {
    fn to_string(&self) -> String {
        match self {
            Self::Mysql => String::from("MYSQL"),
            Self::Postgresql => String::from("POSTGRESQL"),
            Self::Snowflake => String::from("SNOWFLAKE"),
            Self::Redshift => String::from("REDSHIFT"),
            Self::Sqldw => String::from("SQLDW"),
            Self::Sqlserver => String::from("SQLSERVER"),
            Self::Databricks => String::from("DATABRICKS"),
        }
    }
}

impl Default for CatalogConnectionType {
    fn default() -> CatalogConnectionType {
        Self::Mysql
    }
}




