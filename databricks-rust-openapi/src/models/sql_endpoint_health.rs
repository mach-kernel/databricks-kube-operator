use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlEndpointHealth {
    /// Details about errors that are causing current degraded/failed status.
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<String>,
    /// The reason for failure to bring up clusters for this warehouse. This is available when status is 'FAILED' and sometimes when it is DEGRADED.
    #[serde(rename = "failure_reason", skip_serializing_if = "Option::is_none")]
    pub failure_reason: Option<Box<crate::models::SqlTerminationReason>>,
    /// Deprecated. split into summary and details for security
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::SqlStatus>,
    /// A short summary of the health status in case of degraded/failed warehouses.
    #[serde(rename = "summary", skip_serializing_if = "Option::is_none")]
    pub summary: Option<String>,
}

impl SqlEndpointHealth {
    pub fn new() -> SqlEndpointHealth {
        SqlEndpointHealth {
            details: None,
            failure_reason: None,
            message: None,
            status: None,
            summary: None,
        }
    }
}


