use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatementExecutiongetStatement200Response {
    #[serde(rename = "manifest", skip_serializing_if = "Option::is_none")]
    pub manifest: Option<Box<crate::models::SqlResultManifest>>,
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<Box<crate::models::SqlResultData>>,
    /// Statement ID is returned upon successfully submitting a SQL statement, and is a required reference for all subsequent calls. 
    #[serde(rename = "statement_id", skip_serializing_if = "Option::is_none")]
    pub statement_id: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::SqlStatementStatus>>,
}

impl StatementExecutiongetStatement200Response {
    pub fn new() -> StatementExecutiongetStatement200Response {
        StatementExecutiongetStatement200Response {
            manifest: None,
            result: None,
            statement_id: None,
            status: None,
        }
    }
}


