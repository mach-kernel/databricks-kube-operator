use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeInstancePoolStats {
    /// Number of active instances in the pool that are NOT part of a cluster.
    #[serde(rename = "idle_count", skip_serializing_if = "Option::is_none")]
    pub idle_count: Option<i32>,
    /// Number of pending instances in the pool that are NOT part of a cluster.
    #[serde(rename = "pending_idle_count", skip_serializing_if = "Option::is_none")]
    pub pending_idle_count: Option<i32>,
    /// Number of pending instances in the pool that are part of a cluster.
    #[serde(rename = "pending_used_count", skip_serializing_if = "Option::is_none")]
    pub pending_used_count: Option<i32>,
    /// Number of active instances in the pool that are part of a cluster.
    #[serde(rename = "used_count", skip_serializing_if = "Option::is_none")]
    pub used_count: Option<i32>,
}

impl ComputeInstancePoolStats {
    pub fn new() -> ComputeInstancePoolStats {
        ComputeInstancePoolStats {
            idle_count: None,
            pending_idle_count: None,
            pending_used_count: None,
            used_count: None,
        }
    }
}


