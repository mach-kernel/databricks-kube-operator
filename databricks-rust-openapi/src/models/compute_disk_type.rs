use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeDiskType {
    /// 
    #[serde(rename = "azure_disk_volume_type", skip_serializing_if = "Option::is_none")]
    pub azure_disk_volume_type: Option<AzureDiskVolumeType>,
    /// 
    #[serde(rename = "ebs_volume_type", skip_serializing_if = "Option::is_none")]
    pub ebs_volume_type: Option<EbsVolumeType>,
}

impl ComputeDiskType {
    pub fn new() -> ComputeDiskType {
        ComputeDiskType {
            azure_disk_volume_type: None,
            ebs_volume_type: None,
        }
    }
}

/// 
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AzureDiskVolumeType {
    #[serde(rename = "PREMIUM_LRS")]
    PremiumLrs,
    #[serde(rename = "STANDARD_LRS")]
    StandardLrs,
}

impl Default for AzureDiskVolumeType {
    fn default() -> AzureDiskVolumeType {
        Self::PremiumLrs
    }
}
/// 
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EbsVolumeType {
    #[serde(rename = "GENERAL_PURPOSE_SSD")]
    GeneralPurposeSsd,
    #[serde(rename = "THROUGHPUT_OPTIMIZED_HDD")]
    ThroughputOptimizedHdd,
}

impl Default for EbsVolumeType {
    fn default() -> EbsVolumeType {
        Self::GeneralPurposeSsd
    }
}

