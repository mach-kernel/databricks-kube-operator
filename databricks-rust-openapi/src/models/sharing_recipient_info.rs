use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SharingRecipientInfo {
    /// Username of the recipient owner.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// Cloud vendor of the recipient's Unity Catalog Metstore. This field is only present when the __authentication_type__ is **DATABRICKS**`.
    #[serde(rename = "cloud", skip_serializing_if = "Option::is_none")]
    pub cloud: Option<String>,
    /// The global Unity Catalog metastore id provided by the data recipient. This field is only present when the __authentication_type__ is **DATABRICKS**. The identifier is of format __cloud__:__region__:__metastore-uuid__. 
    #[serde(rename = "data_recipient_global_metastore_id", skip_serializing_if = "Option::is_none")]
    pub data_recipient_global_metastore_id: Option<serde_json::Value>,
    /// Full activation url to retrieve the access token. It will be empty if the token is already retrieved.
    #[serde(rename = "activation_url", skip_serializing_if = "Option::is_none")]
    pub activation_url: Option<String>,
    /// The one-time sharing code provided by the data recipient. This field is only present when the __authentication_type__ is **DATABRICKS**.
    #[serde(rename = "sharing_code", skip_serializing_if = "Option::is_none")]
    pub sharing_code: Option<String>,
    /// Unique identifier of recipient's Unity Catalog metastore. This field is only present when the __authentication_type__ is **DATABRICKS**
    #[serde(rename = "metastore_id", skip_serializing_if = "Option::is_none")]
    pub metastore_id: Option<String>,
    /// Username of recipient creator.
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    /// Name of Recipient.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "authentication_type", skip_serializing_if = "Option::is_none")]
    pub authentication_type: Option<crate::models::SharingAuthenticationType>,
    /// Time at which the recipient was updated, in epoch milliseconds.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
    /// Cloud region of the recipient's Unity Catalog Metstore. This field is only present when the __authentication_type__ is **DATABRICKS**.
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// Time at which this recipient was created, in epoch milliseconds.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
    /// Recipient properties as map of string key-value pairs. 
    #[serde(rename = "properties_kvpairs", skip_serializing_if = "Option::is_none")]
    pub properties_kvpairs: Option<Box<crate::models::SharingSecurablePropertiesKvPairs>>,
    /// Description about the recipient.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Username of recipient updater.
    #[serde(rename = "updated_by", skip_serializing_if = "Option::is_none")]
    pub updated_by: Option<String>,
    /// IP Access List
    #[serde(rename = "ip_access_list", skip_serializing_if = "Option::is_none")]
    pub ip_access_list: Option<Box<crate::models::SharingIpAccessList>>,
    /// A boolean status field showing whether the Recipient's activation URL has been exercised or not.
    #[serde(rename = "activated", skip_serializing_if = "Option::is_none")]
    pub activated: Option<bool>,
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<crate::models::SharingRecipientTokenInfo>>,
}

impl SharingRecipientInfo {
    pub fn new() -> SharingRecipientInfo {
        SharingRecipientInfo {
            owner: None,
            cloud: None,
            data_recipient_global_metastore_id: None,
            activation_url: None,
            sharing_code: None,
            metastore_id: None,
            created_by: None,
            name: None,
            authentication_type: None,
            updated_at: None,
            region: None,
            created_at: None,
            properties_kvpairs: None,
            comment: None,
            updated_by: None,
            ip_access_list: None,
            activated: None,
            tokens: None,
        }
    }
}


