use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsSqlAlertOutput {
    #[serde(rename = "alert_state", skip_serializing_if = "Option::is_none")]
    pub alert_state: Option<crate::models::JobsSqlAlertState>,
    /// The link to find the output results.
    #[serde(rename = "output_link", skip_serializing_if = "Option::is_none")]
    pub output_link: Option<String>,
    /// The text of the SQL query. Can Run permission of the SQL query associated with the SQL alert is required to view this field.
    #[serde(rename = "query_text", skip_serializing_if = "Option::is_none")]
    pub query_text: Option<String>,
    #[serde(rename = "sql_statements", skip_serializing_if = "Option::is_none")]
    pub sql_statements: Option<Vec<crate::models::JobsSqlStatementOutput>>,
    /// The canonical identifier of the SQL warehouse.
    #[serde(rename = "warehouse_id", skip_serializing_if = "Option::is_none")]
    pub warehouse_id: Option<String>,
}

impl JobsSqlAlertOutput {
    pub fn new() -> JobsSqlAlertOutput {
        JobsSqlAlertOutput {
            alert_state: None,
            output_link: None,
            query_text: None,
            sql_statements: None,
            warehouse_id: None,
        }
    }
}


