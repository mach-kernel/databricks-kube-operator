use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// JobsJobRunAs : Write-only setting, available only in Create/Update/Reset and Submit calls. Specifies the user or service principal that the job runs as. If not specified, the job runs as the user who created the job.  Only `user_name` or `service_principal_name` can be specified. If both are specified, an error is thrown. 



#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsJobRunAs {
    /// Application ID of an active service principal. Setting this field requires the `servicePrincipal/user` role.
    #[serde(rename = "service_principal_name", skip_serializing_if = "Option::is_none")]
    pub service_principal_name: Option<String>,
    /// The email of an active workspace user. Non-admin users can only set this field to their own email.
    #[serde(rename = "user_name", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
}

impl JobsJobRunAs {
    /// Write-only setting, available only in Create/Update/Reset and Submit calls. Specifies the user or service principal that the job runs as. If not specified, the job runs as the user who created the job.  Only `user_name` or `service_principal_name` can be specified. If both are specified, an error is thrown. 
    pub fn new() -> JobsJobRunAs {
        JobsJobRunAs {
            service_principal_name: None,
            user_name: None,
        }
    }
}


