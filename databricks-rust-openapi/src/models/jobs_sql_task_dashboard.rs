use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsSqlTaskDashboard {
    /// Subject of the email sent to subscribers of this task.
    #[serde(rename = "custom_subject", skip_serializing_if = "Option::is_none")]
    pub custom_subject: Option<String>,
    /// The canonical identifier of the SQL dashboard.
    #[serde(rename = "dashboard_id")]
    pub dashboard_id: String,
    /// If true, the dashboard snapshot is not taken, and emails are not sent to subscribers.
    #[serde(rename = "pause_subscriptions", skip_serializing_if = "Option::is_none")]
    pub pause_subscriptions: Option<bool>,
    #[serde(rename = "subscriptions", skip_serializing_if = "Option::is_none")]
    pub subscriptions: Option<Vec<crate::models::JobsSqlTaskSubscription>>,
}

impl JobsSqlTaskDashboard {
    pub fn new(dashboard_id: String) -> JobsSqlTaskDashboard {
        JobsSqlTaskDashboard {
            custom_subject: None,
            dashboard_id,
            pause_subscriptions: None,
            subscriptions: None,
        }
    }
}


