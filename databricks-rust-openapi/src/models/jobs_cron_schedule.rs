use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsCronSchedule {
    /// Indicate whether this schedule is paused or not.
    #[serde(rename = "pause_status", skip_serializing_if = "Option::is_none")]
    pub pause_status: Option<crate::models::JobsPauseStatus>,
    /// A Cron expression using Quartz syntax that describes the schedule for a job. See [Cron Trigger](http://Wwwquartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) for details. This field is required.\" 
    #[serde(rename = "quartz_cron_expression")]
    pub quartz_cron_expression: String,
    /// A Java timezone ID. The schedule for a job is resolved with respect to this timezone. See [Java TimeZone](https://Docsoracle.com/javase/7/docs/api/java/util/TimeZone.html) for details. This field is required. 
    #[serde(rename = "timezone_id")]
    pub timezone_id: String,
}

impl JobsCronSchedule {
    pub fn new(quartz_cron_expression: String, timezone_id: String) -> JobsCronSchedule {
        JobsCronSchedule {
            pause_status: None,
            quartz_cron_expression,
            timezone_id,
        }
    }
}


