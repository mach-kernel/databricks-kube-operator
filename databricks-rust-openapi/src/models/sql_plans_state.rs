use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SqlPlansState : Whether plans exist for the execution, or the reason why they are missing

/// Whether plans exist for the execution, or the reason why they are missing
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SqlPlansState {
    #[serde(rename = "IGNORED_SMALL_DURATION")]
    IgnoredSmallDuration,
    #[serde(rename = "IGNORED_LARGE_PLANS_SIZE")]
    IgnoredLargePlansSize,
    #[serde(rename = "EXISTS")]
    Exists,
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "EMPTY")]
    Empty,
    #[serde(rename = "IGNORED_SPARK_PLAN_TYPE")]
    IgnoredSparkPlanType,

}

impl ToString for SqlPlansState {
    fn to_string(&self) -> String {
        match self {
            Self::IgnoredSmallDuration => String::from("IGNORED_SMALL_DURATION"),
            Self::IgnoredLargePlansSize => String::from("IGNORED_LARGE_PLANS_SIZE"),
            Self::Exists => String::from("EXISTS"),
            Self::Unknown => String::from("UNKNOWN"),
            Self::Empty => String::from("EMPTY"),
            Self::IgnoredSparkPlanType => String::from("IGNORED_SPARK_PLAN_TYPE"),
        }
    }
}

impl Default for SqlPlansState {
    fn default() -> SqlPlansState {
        Self::IgnoredSmallDuration
    }
}




