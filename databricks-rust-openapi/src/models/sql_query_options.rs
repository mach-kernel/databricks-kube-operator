use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlQueryOptions {
    /// The timestamp when this query was moved to trash. Only present when the `is_archived` property is `true`. Trashed items are deleted after thirty days.
    #[serde(rename = "moved_to_trash_at", skip_serializing_if = "Option::is_none")]
    pub moved_to_trash_at: Option<String>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<crate::models::SqlParameter>>,
}

impl SqlQueryOptions {
    pub fn new() -> SqlQueryOptions {
        SqlQueryOptions {
            moved_to_trash_at: None,
            parameters: None,
        }
    }
}


