use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SqlDashboard : A JSON representing a dashboard containing widgets of visualizations and text boxes.



#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlDashboard {
    /// The ID of the user that created and owns this dashboard.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i32>,
    /// In the web application, query filters that share a name are coupled to a single selection box if this value is `true`.
    #[serde(rename = "dashboard_filters_enabled", skip_serializing_if = "Option::is_none")]
    pub dashboard_filters_enabled: Option<bool>,
    /// Indicates whether this query object appears in the current user's favorites list. This flag determines whether the star icon for favorites is selected.
    #[serde(rename = "is_favorite", skip_serializing_if = "Option::is_none")]
    pub is_favorite: Option<bool>,
    /// Indicates whether a dashboard is trashed. Trashed dashboards won't appear in list views.  If this boolean is `true`, the `options` property for this dashboard includes a `moved_to_trash_at` timestamp. Items in trash are permanently deleted after 30 days.
    #[serde(rename = "is_archived", skip_serializing_if = "Option::is_none")]
    pub is_archived: Option<bool>,
    /// The identifier of the workspace folder containing the object.
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::SqlUser>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// The ID for this dashboard.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The title of the dashboard that appears in list views and at the top of the dashboard page.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// URL slug. Usually mirrors the query name with dashes (`-`) instead of spaces. Appears in the URL for this query.
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
    #[serde(rename = "widgets", skip_serializing_if = "Option::is_none")]
    pub widgets: Option<Vec<crate::models::SqlWidget>>,
    /// Timestamp when this dashboard was last updated.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "permission_tier", skip_serializing_if = "Option::is_none")]
    pub permission_tier: Option<crate::models::SqlPermissionLevel>,
    /// Whether a dashboard is a draft. Draft dashboards only appear in list views for their owners.
    #[serde(rename = "is_draft", skip_serializing_if = "Option::is_none")]
    pub is_draft: Option<bool>,
    /// Timestamp when this dashboard was created.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Whether the authenticated user can edit the query definition.
    #[serde(rename = "can_edit", skip_serializing_if = "Option::is_none")]
    pub can_edit: Option<bool>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Box<crate::models::SqlDashboardOptions>>,
}

impl SqlDashboard {
    /// A JSON representing a dashboard containing widgets of visualizations and text boxes.
    pub fn new() -> SqlDashboard {
        SqlDashboard {
            user_id: None,
            dashboard_filters_enabled: None,
            is_favorite: None,
            is_archived: None,
            parent: None,
            user: None,
            tags: None,
            id: None,
            name: None,
            slug: None,
            widgets: None,
            updated_at: None,
            permission_tier: None,
            is_draft: None,
            created_at: None,
            can_edit: None,
            options: None,
        }
    }
}


