use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SettingsTokenInfo {
    /// Comment that describes the purpose of the token, specified by the token creator.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// User ID of the user that created the token.
    #[serde(rename = "created_by_id", skip_serializing_if = "Option::is_none")]
    pub created_by_id: Option<i64>,
    /// Username of the user that created the token.
    #[serde(rename = "created_by_username", skip_serializing_if = "Option::is_none")]
    pub created_by_username: Option<String>,
    /// Timestamp when the token was created.
    #[serde(rename = "creation_time", skip_serializing_if = "Option::is_none")]
    pub creation_time: Option<i64>,
    /// Timestamp when the token expires.
    #[serde(rename = "expiry_time", skip_serializing_if = "Option::is_none")]
    pub expiry_time: Option<i64>,
    /// User ID of the user that owns the token.
    #[serde(rename = "owner_id", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<i64>,
    /// ID of the token.
    #[serde(rename = "token_id", skip_serializing_if = "Option::is_none")]
    pub token_id: Option<String>,
}

impl SettingsTokenInfo {
    pub fn new() -> SettingsTokenInfo {
        SettingsTokenInfo {
            comment: None,
            created_by_id: None,
            created_by_username: None,
            creation_time: None,
            expiry_time: None,
            owner_id: None,
            token_id: None,
        }
    }
}


