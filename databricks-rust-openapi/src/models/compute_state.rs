use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ComputeState : Current state of the cluster.

/// Current state of the cluster.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ComputeState {
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "RUNNING")]
    Running,
    #[serde(rename = "RESTARTING")]
    Restarting,
    #[serde(rename = "RESIZING")]
    Resizing,
    #[serde(rename = "TERMINATING")]
    Terminating,
    #[serde(rename = "TERMINATED")]
    Terminated,
    #[serde(rename = "ERROR")]
    Error,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl ToString for ComputeState {
    fn to_string(&self) -> String {
        match self {
            Self::Pending => String::from("PENDING"),
            Self::Running => String::from("RUNNING"),
            Self::Restarting => String::from("RESTARTING"),
            Self::Resizing => String::from("RESIZING"),
            Self::Terminating => String::from("TERMINATING"),
            Self::Terminated => String::from("TERMINATED"),
            Self::Error => String::from("ERROR"),
            Self::Unknown => String::from("UNKNOWN"),
        }
    }
}

impl Default for ComputeState {
    fn default() -> ComputeState {
        Self::Pending
    }
}




