use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CatalogTableType {
    #[serde(rename = "MANAGED")]
    Managed,
    #[serde(rename = "EXTERNAL")]
    External,
    #[serde(rename = "VIEW")]
    View,
    #[serde(rename = "MATERIALIZED_VIEW")]
    MaterializedView,
    #[serde(rename = "STREAMING_TABLE")]
    StreamingTable,

}

impl ToString for CatalogTableType {
    fn to_string(&self) -> String {
        match self {
            Self::Managed => String::from("MANAGED"),
            Self::External => String::from("EXTERNAL"),
            Self::View => String::from("VIEW"),
            Self::MaterializedView => String::from("MATERIALIZED_VIEW"),
            Self::StreamingTable => String::from("STREAMING_TABLE"),
        }
    }
}

impl Default for CatalogTableType {
    fn default() -> CatalogTableType {
        Self::Managed
    }
}




