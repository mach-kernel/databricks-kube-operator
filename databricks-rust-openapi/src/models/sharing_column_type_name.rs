use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SharingColumnTypeName : Name of type (INT, STRUCT, MAP, etc.).

/// Name of type (INT, STRUCT, MAP, etc.).
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SharingColumnTypeName {
    #[serde(rename = "BOOLEAN")]
    Boolean,
    #[serde(rename = "BYTE")]
    Byte,
    #[serde(rename = "SHORT")]
    Short,
    #[serde(rename = "INT")]
    Int,
    #[serde(rename = "LONG")]
    Long,
    #[serde(rename = "FLOAT")]
    Float,
    #[serde(rename = "DOUBLE")]
    Double,
    #[serde(rename = "DATE")]
    Date,
    #[serde(rename = "TIMESTAMP")]
    Timestamp,
    #[serde(rename = "TIMESTAMP_NTZ")]
    TimestampNtz,
    #[serde(rename = "STRING")]
    String,
    #[serde(rename = "BINARY")]
    Binary,
    #[serde(rename = "DECIMAL")]
    Decimal,
    #[serde(rename = "INTERVAL")]
    Interval,
    #[serde(rename = "ARRAY")]
    Array,
    #[serde(rename = "STRUCT")]
    Struct,
    #[serde(rename = "MAP")]
    Map,
    #[serde(rename = "CHAR")]
    Char,
    #[serde(rename = "NULL")]
    Null,
    #[serde(rename = "USER_DEFINED_TYPE")]
    UserDefinedType,
    #[serde(rename = "TABLE_TYPE")]
    TableType,

}

impl ToString for SharingColumnTypeName {
    fn to_string(&self) -> String {
        match self {
            Self::Boolean => String::from("BOOLEAN"),
            Self::Byte => String::from("BYTE"),
            Self::Short => String::from("SHORT"),
            Self::Int => String::from("INT"),
            Self::Long => String::from("LONG"),
            Self::Float => String::from("FLOAT"),
            Self::Double => String::from("DOUBLE"),
            Self::Date => String::from("DATE"),
            Self::Timestamp => String::from("TIMESTAMP"),
            Self::TimestampNtz => String::from("TIMESTAMP_NTZ"),
            Self::String => String::from("STRING"),
            Self::Binary => String::from("BINARY"),
            Self::Decimal => String::from("DECIMAL"),
            Self::Interval => String::from("INTERVAL"),
            Self::Array => String::from("ARRAY"),
            Self::Struct => String::from("STRUCT"),
            Self::Map => String::from("MAP"),
            Self::Char => String::from("CHAR"),
            Self::Null => String::from("NULL"),
            Self::UserDefinedType => String::from("USER_DEFINED_TYPE"),
            Self::TableType => String::from("TABLE_TYPE"),
        }
    }
}

impl Default for SharingColumnTypeName {
    fn default() -> SharingColumnTypeName {
        Self::Boolean
    }
}




