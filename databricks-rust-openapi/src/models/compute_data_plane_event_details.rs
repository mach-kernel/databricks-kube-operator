use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeDataPlaneEventDetails {
    /// <needs content added>
    #[serde(rename = "event_type", skip_serializing_if = "Option::is_none")]
    pub event_type: Option<EventType>,
    /// <needs content added>
    #[serde(rename = "executor_failures", skip_serializing_if = "Option::is_none")]
    pub executor_failures: Option<i32>,
    /// <needs content added>
    #[serde(rename = "host_id", skip_serializing_if = "Option::is_none")]
    pub host_id: Option<String>,
    /// <needs content added>
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
}

impl ComputeDataPlaneEventDetails {
    pub fn new() -> ComputeDataPlaneEventDetails {
        ComputeDataPlaneEventDetails {
            event_type: None,
            executor_failures: None,
            host_id: None,
            timestamp: None,
        }
    }
}

/// <needs content added>
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EventType {
    #[serde(rename = "NODE_BLACKLISTED")]
    Blacklisted,
    #[serde(rename = "NODE_EXCLUDED_DECOMMISSIONED")]
    ExcludedDecommissioned,
}

impl Default for EventType {
    fn default() -> EventType {
        Self::Blacklisted
    }
}

