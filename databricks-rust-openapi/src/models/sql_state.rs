use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SqlState : State of the warehouse

/// State of the warehouse
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SqlState {
    #[serde(rename = "STARTING")]
    Starting,
    #[serde(rename = "RUNNING")]
    Running,
    #[serde(rename = "STOPPING")]
    Stopping,
    #[serde(rename = "STOPPED")]
    Stopped,
    #[serde(rename = "DELETING")]
    Deleting,
    #[serde(rename = "DELETED")]
    Deleted,

}

impl ToString for SqlState {
    fn to_string(&self) -> String {
        match self {
            Self::Starting => String::from("STARTING"),
            Self::Running => String::from("RUNNING"),
            Self::Stopping => String::from("STOPPING"),
            Self::Stopped => String::from("STOPPED"),
            Self::Deleting => String::from("DELETING"),
            Self::Deleted => String::from("DELETED"),
        }
    }
}

impl Default for SqlState {
    fn default() -> SqlState {
        Self::Starting
    }
}




