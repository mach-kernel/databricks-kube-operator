use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProvisioningCustomerManagedKey {
    /// The Databricks account ID that holds the customer-managed key.
    #[serde(rename = "account_id", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    #[serde(rename = "aws_key_info", skip_serializing_if = "Option::is_none")]
    pub aws_key_info: Option<Box<crate::models::ProvisioningAwsKeyInfo>>,
    /// Time in epoch milliseconds when the customer key was created.
    #[serde(rename = "creation_time", skip_serializing_if = "Option::is_none")]
    pub creation_time: Option<i64>,
    /// ID of the encryption key configuration object.
    #[serde(rename = "customer_managed_key_id", skip_serializing_if = "Option::is_none")]
    pub customer_managed_key_id: Option<String>,
    #[serde(rename = "gcp_key_info", skip_serializing_if = "Option::is_none")]
    pub gcp_key_info: Option<Box<crate::models::ProvisioningGcpKeyInfo>>,
    #[serde(rename = "use_cases", skip_serializing_if = "Option::is_none")]
    pub use_cases: Option<Vec<crate::models::ProvisioningKeyUseCase>>,
}

impl ProvisioningCustomerManagedKey {
    pub fn new() -> ProvisioningCustomerManagedKey {
        ProvisioningCustomerManagedKey {
            account_id: None,
            aws_key_info: None,
            creation_time: None,
            customer_managed_key_id: None,
            gcp_key_info: None,
            use_cases: None,
        }
    }
}


