use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SharingCleanRoomAssetInfo {
    /// Time at which this asset was added, in epoch milliseconds.
    #[serde(rename = "added_at", skip_serializing_if = "Option::is_none")]
    pub added_at: Option<i64>,
    /// Details about the notebook asset.
    #[serde(rename = "notebook_info", skip_serializing_if = "Option::is_none")]
    pub notebook_info: Option<Box<crate::models::SharingCleanRoomNotebookInfo>>,
    /// The collaborator who owns the asset.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<Box<crate::models::SharingCleanRoomCollaboratorInfo>>,
    /// Details about the table asset.
    #[serde(rename = "table_info", skip_serializing_if = "Option::is_none")]
    pub table_info: Option<Box<crate::models::SharingCleanRoomTableInfo>>,
    /// Time at which this asset was updated, in epoch milliseconds.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl SharingCleanRoomAssetInfo {
    pub fn new() -> SharingCleanRoomAssetInfo {
        SharingCleanRoomAssetInfo {
            added_at: None,
            notebook_info: None,
            owner: None,
            table_info: None,
            updated_at: None,
        }
    }
}


