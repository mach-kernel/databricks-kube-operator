use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobsGitProvider {
    #[serde(rename = "gitHub")]
    GitHub,
    #[serde(rename = "bitbucketCloud")]
    BitbucketCloud,
    #[serde(rename = "azureDevOpsServices")]
    AzureDevOpsServices,
    #[serde(rename = "gitHubEnterprise")]
    GitHubEnterprise,
    #[serde(rename = "bitbucketServer")]
    BitbucketServer,
    #[serde(rename = "gitLab")]
    GitLab,
    #[serde(rename = "gitLabEnterpriseEdition")]
    GitLabEnterpriseEdition,
    #[serde(rename = "awsCodeCommit")]
    AwsCodeCommit,

}

impl ToString for JobsGitProvider {
    fn to_string(&self) -> String {
        match self {
            Self::GitHub => String::from("gitHub"),
            Self::BitbucketCloud => String::from("bitbucketCloud"),
            Self::AzureDevOpsServices => String::from("azureDevOpsServices"),
            Self::GitHubEnterprise => String::from("gitHubEnterprise"),
            Self::BitbucketServer => String::from("bitbucketServer"),
            Self::GitLab => String::from("gitLab"),
            Self::GitLabEnterpriseEdition => String::from("gitLabEnterpriseEdition"),
            Self::AwsCodeCommit => String::from("awsCodeCommit"),
        }
    }
}

impl Default for JobsGitProvider {
    fn default() -> JobsGitProvider {
        Self::GitHub
    }
}




