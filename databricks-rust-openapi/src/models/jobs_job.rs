use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize, Default)]
pub struct JobsJob {
    /// The time at which this job was created in epoch milliseconds (milliseconds since 1/1/1970 UTC).
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<i64>,
    /// The creator user name. This field wonâ€™t be included in the response if the user has already been deleted.
    #[serde(rename = "creator_user_name", skip_serializing_if = "Option::is_none")]
    pub creator_user_name: Option<String>,
    /// The canonical identifier for this job.
    #[serde(rename = "job_id", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<i64>,
    /// The email of an active workspace user or the application ID of a service principal that the job runs as. This value can be changed by setting the `run_as` field when creating or updating a job.  By default, `run_as_user_name` is based on the current job settings and is set to the creator of the job if job access control is disabled or to the user with the `is_owner` permission if job access control is enabled. 
    #[serde(rename = "run_as_user_name", skip_serializing_if = "Option::is_none")]
    pub run_as_user_name: Option<String>,
    /// Settings for this job and all of its runs. These settings can be updated using the `resetJob` method.
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<Box<crate::models::JobsJobSettings>>,
    /// History of the file arrival trigger associated with the job.
    #[serde(rename = "trigger_history", skip_serializing_if = "Option::is_none")]
    pub trigger_history: Option<Box<crate::models::JobsTriggerHistory>>,
}

impl JobsJob {
    pub fn new() -> JobsJob {
        JobsJob {
            created_time: None,
            creator_user_name: None,
            job_id: None,
            run_as_user_name: None,
            settings: None,
            trigger_history: None,
        }
    }
}


