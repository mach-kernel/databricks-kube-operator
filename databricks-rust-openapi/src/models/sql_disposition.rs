use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SqlDisposition : The fetch disposition provides two modes of fetching results: `INLINE` and `EXTERNAL_LINKS`.  Statements executed with `INLINE` disposition will return result data inline, in `JSON_ARRAY` format, in a series of chunks. If a given statement produces a result set with a size larger than 16 MiB, that statement execution is aborted, and no result set will be available.  **NOTE** Byte limits are computed based upon internal representations of the result set data, and may not match the sizes visible in JSON responses.  Statements executed with `EXTERNAL_LINKS` disposition will return result data as external links: URLs that point to cloud storage internal to the workspace. Using `EXTERNAL_LINKS` disposition allows statements to generate arbitrarily sized result sets for fetching up to 100 GiB. The resulting links have two important properties:  1. They point to resources _external_ to the Databricks compute; therefore any associated authentication    information (typically a personal access token, OAuth token, or similar) _must be removed_ when fetching from these links.  2. These are presigned URLs with a specific expiration, indicated in the response. The behavior when attempting to use an expired link is cloud specific. 

/// The fetch disposition provides two modes of fetching results: `INLINE` and `EXTERNAL_LINKS`.  Statements executed with `INLINE` disposition will return result data inline, in `JSON_ARRAY` format, in a series of chunks. If a given statement produces a result set with a size larger than 16 MiB, that statement execution is aborted, and no result set will be available.  **NOTE** Byte limits are computed based upon internal representations of the result set data, and may not match the sizes visible in JSON responses.  Statements executed with `EXTERNAL_LINKS` disposition will return result data as external links: URLs that point to cloud storage internal to the workspace. Using `EXTERNAL_LINKS` disposition allows statements to generate arbitrarily sized result sets for fetching up to 100 GiB. The resulting links have two important properties:  1. They point to resources _external_ to the Databricks compute; therefore any associated authentication    information (typically a personal access token, OAuth token, or similar) _must be removed_ when fetching from these links.  2. These are presigned URLs with a specific expiration, indicated in the response. The behavior when attempting to use an expired link is cloud specific. 
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SqlDisposition {
    #[serde(rename = "INLINE")]
    Inline,
    #[serde(rename = "EXTERNAL_LINKS")]
    ExternalLinks,

}

impl ToString for SqlDisposition {
    fn to_string(&self) -> String {
        match self {
            Self::Inline => String::from("INLINE"),
            Self::ExternalLinks => String::from("EXTERNAL_LINKS"),
        }
    }
}

impl Default for SqlDisposition {
    fn default() -> SqlDisposition {
        Self::Inline
    }
}




