use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ComputeCommandStatus {
    #[serde(rename = "Cancelled")]
    Cancelled,
    #[serde(rename = "Cancelling")]
    Cancelling,
    #[serde(rename = "Error")]
    Error,
    #[serde(rename = "Finished")]
    Finished,
    #[serde(rename = "Queued")]
    Queued,
    #[serde(rename = "Running")]
    Running,

}

impl ToString for ComputeCommandStatus {
    fn to_string(&self) -> String {
        match self {
            Self::Cancelled => String::from("Cancelled"),
            Self::Cancelling => String::from("Cancelling"),
            Self::Error => String::from("Error"),
            Self::Finished => String::from("Finished"),
            Self::Queued => String::from("Queued"),
            Self::Running => String::from("Running"),
        }
    }
}

impl Default for ComputeCommandStatus {
    fn default() -> ComputeCommandStatus {
        Self::Cancelled
    }
}




