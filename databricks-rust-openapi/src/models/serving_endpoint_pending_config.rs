use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServingEndpointPendingConfig {
    /// The config version that the serving endpoint is currently serving.
    #[serde(rename = "config_version", skip_serializing_if = "Option::is_none")]
    pub config_version: Option<i32>,
    #[serde(rename = "served_models", skip_serializing_if = "Option::is_none")]
    pub served_models: Option<Vec<crate::models::ServingServedModelOutput>>,
    /// The timestamp when the update to the pending config started.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<i64>,
    /// The traffic config defining how invocations to the serving endpoint should be routed.
    #[serde(rename = "traffic_config", skip_serializing_if = "Option::is_none")]
    pub traffic_config: Option<Box<crate::models::ServingTrafficConfig>>,
}

impl ServingEndpointPendingConfig {
    pub fn new() -> ServingEndpointPendingConfig {
        ServingEndpointPendingConfig {
            config_version: None,
            served_models: None,
            start_time: None,
            traffic_config: None,
        }
    }
}


