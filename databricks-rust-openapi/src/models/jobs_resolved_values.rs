use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsResolvedValues {
    #[serde(rename = "dbt_task", skip_serializing_if = "Option::is_none")]
    pub dbt_task: Option<Box<crate::models::JobsResolvedDbtTaskValues>>,
    #[serde(rename = "condition_task", skip_serializing_if = "Option::is_none")]
    pub condition_task: Option<Box<crate::models::JobsResolvedConditionTaskValues>>,
    #[serde(rename = "sql_task", skip_serializing_if = "Option::is_none")]
    pub sql_task: Option<Box<crate::models::JobsResolvedParamPairValues>>,
    #[serde(rename = "notebook_task", skip_serializing_if = "Option::is_none")]
    pub notebook_task: Option<Box<crate::models::JobsResolvedNotebookTaskValues>>,
    #[serde(rename = "python_wheel_task", skip_serializing_if = "Option::is_none")]
    pub python_wheel_task: Option<Box<crate::models::JobsResolvedPythonWheelTaskValues>>,
    #[serde(rename = "spark_python_task", skip_serializing_if = "Option::is_none")]
    pub spark_python_task: Option<Box<crate::models::JobsResolvedStringParamsValues>>,
    #[serde(rename = "spark_jar_task", skip_serializing_if = "Option::is_none")]
    pub spark_jar_task: Option<Box<crate::models::JobsResolvedStringParamsValues>>,
    #[serde(rename = "run_job_task", skip_serializing_if = "Option::is_none")]
    pub run_job_task: Option<Box<crate::models::JobsResolvedRunJobTaskValues>>,
    #[serde(rename = "simulation_task", skip_serializing_if = "Option::is_none")]
    pub simulation_task: Option<Box<crate::models::JobsResolvedParamPairValues>>,
    #[serde(rename = "spark_submit_task", skip_serializing_if = "Option::is_none")]
    pub spark_submit_task: Option<Box<crate::models::JobsResolvedStringParamsValues>>,
}

impl JobsResolvedValues {
    pub fn new() -> JobsResolvedValues {
        JobsResolvedValues {
            dbt_task: None,
            condition_task: None,
            sql_task: None,
            notebook_task: None,
            python_wheel_task: None,
            spark_python_task: None,
            spark_jar_task: None,
            run_job_task: None,
            simulation_task: None,
            spark_submit_task: None,
        }
    }
}


