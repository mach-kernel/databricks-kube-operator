use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ProvisioningPrivateAccessLevel : The private access level controls which VPC endpoints can connect to the UI or API of any workspace that attaches this private access settings object. * `ACCOUNT` level access (the default) allows only VPC endpoints that are registered in your Databricks account connect to your workspace. * `ENDPOINT` level access allows only specified VPC endpoints connect to your workspace. For details, see `allowed_vpc_endpoint_ids`.

/// The private access level controls which VPC endpoints can connect to the UI or API of any workspace that attaches this private access settings object. * `ACCOUNT` level access (the default) allows only VPC endpoints that are registered in your Databricks account connect to your workspace. * `ENDPOINT` level access allows only specified VPC endpoints connect to your workspace. For details, see `allowed_vpc_endpoint_ids`.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProvisioningPrivateAccessLevel {
    #[serde(rename = "ACCOUNT")]
    Account,
    #[serde(rename = "ENDPOINT")]
    Endpoint,

}

impl ToString for ProvisioningPrivateAccessLevel {
    fn to_string(&self) -> String {
        match self {
            Self::Account => String::from("ACCOUNT"),
            Self::Endpoint => String::from("ENDPOINT"),
        }
    }
}

impl Default for ProvisioningPrivateAccessLevel {
    fn default() -> ProvisioningPrivateAccessLevel {
        Self::Account
    }
}




