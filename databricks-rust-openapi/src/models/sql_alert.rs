use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlAlert {
    /// The identifier of the workspace folder containing the object.
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<String>,
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<Box<crate::models::SqlAlertQuery>>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::SqlUser>>,
    /// Alert ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name of the alert.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Number of seconds after being triggered before the alert rearms itself and can be triggered again. If `null`, alert will never be triggered again.
    #[serde(rename = "rearm", skip_serializing_if = "Option::is_none")]
    pub rearm: Option<i32>,
    /// Timestamp when the alert was last updated.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// Timestamp when the alert was last triggered.
    #[serde(rename = "last_triggered_at", skip_serializing_if = "Option::is_none")]
    pub last_triggered_at: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<crate::models::SqlalertState>,
    /// Timestamp when the alert was created.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Box<crate::models::SqlAlertOptions>>,
}

impl SqlAlert {
    pub fn new() -> SqlAlert {
        SqlAlert {
            parent: None,
            query: None,
            user: None,
            id: None,
            name: None,
            rearm: None,
            updated_at: None,
            last_triggered_at: None,
            state: None,
            created_at: None,
            options: None,
        }
    }
}


