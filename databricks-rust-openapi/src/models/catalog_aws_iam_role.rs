use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogAwsIamRole {
    /// The external ID used in role assumption to prevent confused deputy problem..
    #[serde(rename = "external_id", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    /// The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access.
    #[serde(rename = "role_arn")]
    pub role_arn: String,
    /// The Amazon Resource Name (ARN) of the AWS IAM user managed by Databricks. This is the identity that is going to assume the AWS IAM role.
    #[serde(rename = "unity_catalog_iam_arn", skip_serializing_if = "Option::is_none")]
    pub unity_catalog_iam_arn: Option<String>,
}

impl CatalogAwsIamRole {
    pub fn new(role_arn: String) -> CatalogAwsIamRole {
        CatalogAwsIamRole {
            external_id: None,
            role_arn,
            unity_catalog_iam_arn: None,
        }
    }
}


