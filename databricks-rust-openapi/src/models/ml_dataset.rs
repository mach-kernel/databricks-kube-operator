use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MlDataset {
    /// Dataset digest, Eg. an md5 hash of the dataset that uniquely identifies it within datasets of the same name.
    #[serde(rename = "digest", skip_serializing_if = "Option::is_none")]
    pub digest: Option<String>,
    /// The name of the dataset. Eg. “my.uc.table@2” “nyc-taxi-dataset”, “fantastic-elk-3”
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The profile of the dataset. Summary statistics for the dataset, such as the number of rows in a table, the mean / std / mode of each column in a table, or the number of elements in an array.
    #[serde(rename = "profile", skip_serializing_if = "Option::is_none")]
    pub profile: Option<String>,
    /// The schema of the dataset. Eg., MLflow ColSpec JSON for a dataframe, MLflow TensorSpec JSON for an ndarray, or another schema format.
    #[serde(rename = "schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    /// The type of the dataset source, Eg. ‘databricks-uc-table’, ‘DBFS’, ‘S3’, ...
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
    /// Source information for the dataset. Note that the source may not exactly reproduce the dataset if it was transformed / modified before use with MLflow.
    #[serde(rename = "source_type", skip_serializing_if = "Option::is_none")]
    pub source_type: Option<String>,
}

impl MlDataset {
    pub fn new() -> MlDataset {
        MlDataset {
            digest: None,
            name: None,
            profile: None,
            schema: None,
            source: None,
            source_type: None,
        }
    }
}


