use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IamUser {
    #[serde(rename = "entitlements", skip_serializing_if = "Option::is_none")]
    pub entitlements: Option<Vec<crate::models::IamComplexValue>>,
    /// String that represents a concatenation of given and family names. For example `John Smith`.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Databricks user ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<Box<crate::models::IamName>>,
    /// Email address of the Databricks user.
    #[serde(rename = "userName", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
    #[serde(rename = "emails", skip_serializing_if = "Option::is_none")]
    pub emails: Option<Vec<crate::models::IamComplexValue>>,
    /// If this user is active
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "roles", default, skip_serializing_if = "Option::is_none")]
    pub roles: Option<serde_json::Value>,
    #[serde(rename = "groups", default, skip_serializing_if = "Option::is_none")]
    pub groups: Option<serde_json::Value>,
    #[serde(rename = "externalId", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
}

impl IamUser {
    pub fn new() -> IamUser {
        IamUser {
            entitlements: None,
            display_name: None,
            id: None,
            name: None,
            user_name: None,
            emails: None,
            active: None,
            roles: None,
            groups: None,
            external_id: None,
        }
    }
}


