use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MlPermissionLevel : Permission level of the requesting user on the object. For what is allowed at each level, see [MLflow Model permissions](..).

/// Permission level of the requesting user on the object. For what is allowed at each level, see [MLflow Model permissions](..).
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MlPermissionLevel {
    #[serde(rename = "CAN_MANAGE")]
    Manage,
    #[serde(rename = "CAN_EDIT")]
    Edit,
    #[serde(rename = "CAN_READ")]
    Read,
    #[serde(rename = "CAN_MANAGE_STAGING_VERSIONS")]
    ManageStagingVersions,
    #[serde(rename = "CAN_MANAGE_PRODUCTION_VERSIONS")]
    ManageProductionVersions,

}

impl ToString for MlPermissionLevel {
    fn to_string(&self) -> String {
        match self {
            Self::Manage => String::from("CAN_MANAGE"),
            Self::Edit => String::from("CAN_EDIT"),
            Self::Read => String::from("CAN_READ"),
            Self::ManageStagingVersions => String::from("CAN_MANAGE_STAGING_VERSIONS"),
            Self::ManageProductionVersions => String::from("CAN_MANAGE_PRODUCTION_VERSIONS"),
        }
    }
}

impl Default for MlPermissionLevel {
    fn default() -> MlPermissionLevel {
        Self::Manage
    }
}




