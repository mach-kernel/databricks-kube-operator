use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SharingCentralCleanRoomInfo {
    #[serde(rename = "clean_room_assets", skip_serializing_if = "Option::is_none")]
    pub clean_room_assets: Option<Vec<crate::models::SharingCleanRoomAssetInfo>>,
    #[serde(rename = "collaborators", skip_serializing_if = "Option::is_none")]
    pub collaborators: Option<Vec<crate::models::SharingCleanRoomCollaboratorInfo>>,
    /// The collaborator who created the clean room.
    #[serde(rename = "creator", skip_serializing_if = "Option::is_none")]
    pub creator: Option<Box<crate::models::SharingCleanRoomCollaboratorInfo>>,
    /// The cloud where clean room tasks will be run.
    #[serde(rename = "station_cloud", skip_serializing_if = "Option::is_none")]
    pub station_cloud: Option<String>,
    /// The region where clean room tasks will be run.
    #[serde(rename = "station_region", skip_serializing_if = "Option::is_none")]
    pub station_region: Option<String>,
}

impl SharingCentralCleanRoomInfo {
    pub fn new() -> SharingCentralCleanRoomInfo {
        SharingCentralCleanRoomInfo {
            clean_room_assets: None,
            collaborators: None,
            creator: None,
            station_cloud: None,
            station_region: None,
        }
    }
}


