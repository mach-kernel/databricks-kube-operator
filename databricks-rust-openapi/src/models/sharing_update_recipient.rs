use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SharingUpdateRecipient {
    /// Description about the recipient.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// IP Access List
    #[serde(rename = "ip_access_list", skip_serializing_if = "Option::is_none")]
    pub ip_access_list: Option<Box<crate::models::SharingIpAccessList>>,
    /// Name of Recipient.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Username of the recipient owner.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// Recipient properties as map of string key-value pairs. When provided in update request, the specified properties will override the existing properties. To add and remove properties, one would need to perform a read-modify-write. 
    #[serde(rename = "properties_kvpairs", skip_serializing_if = "Option::is_none")]
    pub properties_kvpairs: Option<Box<crate::models::SharingSecurablePropertiesKvPairs>>,
}

impl SharingUpdateRecipient {
    pub fn new() -> SharingUpdateRecipient {
        SharingUpdateRecipient {
            comment: None,
            ip_access_list: None,
            name: None,
            owner: None,
            properties_kvpairs: None,
        }
    }
}


