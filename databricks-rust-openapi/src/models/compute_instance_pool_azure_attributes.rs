use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputeInstancePoolAzureAttributes {
    /// Shows the Availability type used for the spot nodes.  The default value is defined by InstancePoolConfinstancePoolDefaultAzureAvailability
    #[serde(rename = "availability", skip_serializing_if = "Option::is_none")]
    pub availability: Option<Availability>,
    /// The default value and documentation here should be kept consistent with CommonConfdefaultSpotBidMaxPrice.
    #[serde(rename = "spot_bid_max_price", skip_serializing_if = "Option::is_none")]
    pub spot_bid_max_price: Option<f64>,
}

impl ComputeInstancePoolAzureAttributes {
    pub fn new() -> ComputeInstancePoolAzureAttributes {
        ComputeInstancePoolAzureAttributes {
            availability: None,
            spot_bid_max_price: None,
        }
    }
}

/// Shows the Availability type used for the spot nodes.  The default value is defined by InstancePoolConfinstancePoolDefaultAzureAvailability
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Availability {
    #[serde(rename = "SPOT_AZURE")]
    SpotAzure,
    #[serde(rename = "ON_DEMAND_AZURE")]
    OnDemandAzure,
    #[serde(rename = "SPOT_WITH_FALLBACK_AZURE")]
    SpotWithFallbackAzure,
}

impl Default for Availability {
    fn default() -> Availability {
        Self::SpotAzure
    }
}

