use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MlLogMetric {
    /// Name of the metric.
    #[serde(rename = "key")]
    pub key: String,
    /// ID of the run under which to log the metric. Must be provided.
    #[serde(rename = "run_id", skip_serializing_if = "Option::is_none")]
    pub run_id: Option<String>,
    /// [Deprecated, use run_id instead] ID of the run under which to log the metric. This field will be removed in a future MLflow version.
    #[serde(rename = "run_uuid", skip_serializing_if = "Option::is_none")]
    pub run_uuid: Option<String>,
    /// Step at which to log the metric
    #[serde(rename = "step", skip_serializing_if = "Option::is_none")]
    pub step: Option<i64>,
    /// Unix timestamp in milliseconds at the time metric was logged.
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
    /// Double value of the metric being logged.
    #[serde(rename = "value")]
    pub value: f64,
}

impl MlLogMetric {
    pub fn new(key: String, timestamp: i64, value: f64) -> MlLogMetric {
        MlLogMetric {
            key,
            run_id: None,
            run_uuid: None,
            step: None,
            timestamp,
            value,
        }
    }
}


