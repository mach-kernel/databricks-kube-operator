use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SharingSharedDataObjectUpdate {
    /// One of: **ADD**, **REMOVE**, **UPDATE**.
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<Action>,
    /// The data object that is being added, removed, or updated.
    #[serde(rename = "data_object", skip_serializing_if = "Option::is_none")]
    pub data_object: Option<Box<crate::models::SharingSharedDataObject>>,
}

impl SharingSharedDataObjectUpdate {
    pub fn new() -> SharingSharedDataObjectUpdate {
        SharingSharedDataObjectUpdate {
            action: None,
            data_object: None,
        }
    }
}

/// One of: **ADD**, **REMOVE**, **UPDATE**.
#[derive(JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "ADD")]
    Add,
    #[serde(rename = "REMOVE")]
    Remove,
    #[serde(rename = "UPDATE")]
    Update,
}

impl Default for Action {
    fn default() -> Action {
        Self::Add
    }
}

