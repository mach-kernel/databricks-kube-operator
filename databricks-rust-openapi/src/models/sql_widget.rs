use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlWidget {
    /// The unique ID for this widget.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Box<crate::models::SqlWidgetOptions>>,
    #[serde(rename = "visualization", skip_serializing_if = "Option::is_none")]
    pub visualization: Option<Box<crate::models::SqlVisualization>>,
    /// Unused field.
    #[serde(rename = "width", skip_serializing_if = "Option::is_none")]
    pub width: Option<i32>,
}

impl SqlWidget {
    pub fn new() -> SqlWidget {
        SqlWidget {
            id: None,
            options: None,
            visualization: None,
            width: None,
        }
    }
}


