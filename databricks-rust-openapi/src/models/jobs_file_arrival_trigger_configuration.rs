use schemars::JsonSchema;
/*
 * Databricks Accounts and Workspace REST API on ALL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsFileArrivalTriggerConfiguration {
    /// If set, the trigger starts a run only after the specified amount of time passed since the last time the trigger fired. The minimum allowed value is 60 seconds 
    #[serde(rename = "min_time_between_triggers_seconds", skip_serializing_if = "Option::is_none")]
    pub min_time_between_triggers_seconds: Option<i32>,
    /// URL to be monitored for file arrivals. The path must point to the root or a subpath of the external location.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// If set, the trigger starts a run only after no file activity has occurred for the specified amount of time. This makes it possible to wait for a batch of incoming files to arrive before triggering a run. The minimum allowed value is 60 seconds. 
    #[serde(rename = "wait_after_last_change_seconds", skip_serializing_if = "Option::is_none")]
    pub wait_after_last_change_seconds: Option<i32>,
}

impl JobsFileArrivalTriggerConfiguration {
    pub fn new() -> JobsFileArrivalTriggerConfiguration {
        JobsFileArrivalTriggerConfiguration {
            min_time_between_triggers_seconds: None,
            url: None,
            wait_after_last_change_seconds: None,
        }
    }
}


