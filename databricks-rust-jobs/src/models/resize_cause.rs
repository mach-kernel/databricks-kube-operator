use schemars::JsonSchema;
/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs. You should never hard code secrets or store them in plain text. Use the [Secrets API](https://docs.databricks.com/dev-tools/api/latest/secrets.html) to manage secrets in the [Databricks CLI](https://docs.databricks.com/dev-tools/cli/index.html). Use the [Secrets utility](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-secrets) to reference secrets in notebooks and jobs.
 *
 * The version of the OpenAPI document: 2.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// ResizeCause : * `AUTOSCALE`: Automatically resized based on load. * `USER_REQUEST`: User requested a new size. * `AUTORECOVERY`: Autorecovery monitor resized the cluster after it lost a node.

/// * `AUTOSCALE`: Automatically resized based on load. * `USER_REQUEST`: User requested a new size. * `AUTORECOVERY`: Autorecovery monitor resized the cluster after it lost a node.
#[derive(
    JsonSchema, Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize,
)]
pub enum ResizeCause {
    #[serde(rename = "AUTOSCALE")]
    Autoscale,
    #[serde(rename = "USER_REQUEST")]
    UserRequest,
    #[serde(rename = "AUTORECOVERY")]
    Autorecovery,
}

impl ToString for ResizeCause {
    fn to_string(&self) -> String {
        match self {
            Self::Autoscale => String::from("AUTOSCALE"),
            Self::UserRequest => String::from("USER_REQUEST"),
            Self::Autorecovery => String::from("AUTORECOVERY"),
        }
    }
}

impl Default for ResizeCause {
    fn default() -> ResizeCause {
        Self::Autoscale
    }
}
