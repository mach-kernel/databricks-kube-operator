use schemars::JsonSchema;
/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs. You should never hard code secrets or store them in plain text. Use the [Secrets API](https://docs.databricks.com/dev-tools/api/latest/secrets.html) to manage secrets in the [Databricks CLI](https://docs.databricks.com/dev-tools/cli/index.html). Use the [Secrets utility](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-secrets) to reference secrets in notebooks and jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhookNotifications {
    /// An optional list of notification IDs to call when the run starts. A maximum of 3 destinations can be specified for the `on_start` property.
    #[serde(rename = "on_start", skip_serializing_if = "Option::is_none")]
    pub on_start: Option<Vec<crate::models::WebhookNotificationsOnStartInner>>,
    /// An optional list of notification IDs to call when the run completes successfully. A maximum of 3 destinations can be specified for the `on_success` property.
    #[serde(rename = "on_success", skip_serializing_if = "Option::is_none")]
    pub on_success: Option<Vec<crate::models::WebhookNotificationsOnStartInner>>,
    /// An optional list of notification IDs to call when the run fails. A maximum of 3 destinations can be specified for the `on_failure` property.
    #[serde(rename = "on_failure", skip_serializing_if = "Option::is_none")]
    pub on_failure: Option<Vec<crate::models::WebhookNotificationsOnStartInner>>,
}

impl WebhookNotifications {
    pub fn new() -> WebhookNotifications {
        WebhookNotifications {
            on_start: None,
            on_success: None,
            on_failure: None,
        }
    }
}


