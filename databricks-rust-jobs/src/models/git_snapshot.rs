use schemars::JsonSchema;
/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs. You should never hard code secrets or store them in plain text. Use the [Secrets API](https://docs.databricks.com/dev-tools/api/latest/secrets.html) to manage secrets in the [Databricks CLI](https://docs.databricks.com/dev-tools/cli/index.html). Use the [Secrets utility](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-secrets) to reference secrets in notebooks and jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GitSnapshot : Read-only state of the remote repository at the time the job was run. This field is only included on job runs.



#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitSnapshot {
    /// Commit that was used to execute the run. If git_branch was specified, this points to the HEAD of the branch at the time of the run; if git_tag was specified, this points to the commit the tag points to.
    #[serde(rename = "used_commit", skip_serializing_if = "Option::is_none")]
    pub used_commit: Option<String>,
}

impl GitSnapshot {
    /// Read-only state of the remote repository at the time the job was run. This field is only included on job runs.
    pub fn new() -> GitSnapshot {
        GitSnapshot {
            used_commit: None,
        }
    }
}


