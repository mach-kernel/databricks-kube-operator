use schemars::JsonSchema;
/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs. You should never hard code secrets or store them in plain text. Use the [Secrets API](https://docs.databricks.com/dev-tools/api/latest/secrets.html) to manage secrets in the [Databricks CLI](https://docs.databricks.com/dev-tools/cli/index.html). Use the [Secrets utility](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-secrets) to reference secrets in notebooks and jobs.
 *
 * The version of the OpenAPI document: 2.1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(JsonSchema, Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DbtOutput {
    /// A pre-signed URL to download the (compressed) dbt artifacts. This link is valid for a limited time (30 minutes). This information is only available after the run has finished.
    #[serde(rename = "artifacts_link", skip_serializing_if = "Option::is_none")]
    pub artifacts_link: Option<String>,
    /// An optional map of headers to send when retrieving the artifact from the `artifacts_link`.
    #[serde(rename = "artifacts_headers", skip_serializing_if = "Option::is_none")]
    pub artifacts_headers: Option<serde_json::Value>,
}

impl DbtOutput {
    pub fn new() -> DbtOutput {
        DbtOutput {
            artifacts_link: None,
            artifacts_headers: None,
        }
    }
}
