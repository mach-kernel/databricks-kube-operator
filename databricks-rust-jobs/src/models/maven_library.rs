use schemars::JsonSchema;
/*
 * Jobs API 2.1
 *
 * The Jobs API allows you to create, edit, and delete jobs. You should never hard code secrets or store them in plain text. Use the [Secrets API](https://docs.databricks.com/dev-tools/api/latest/secrets.html) to manage secrets in the [Databricks CLI](https://docs.databricks.com/dev-tools/cli/index.html). Use the [Secrets utility](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-secrets) to reference secrets in notebooks and jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(JsonSchema, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MavenLibrary {
    /// Gradle-style Maven coordinates. For example: `org.jsoup:jsoup:1.7.2`. This field is required.
    #[serde(rename = "coordinates")]
    pub coordinates: String,
    /// Maven repo to install the Maven package from. If omitted, both Maven Central Repository and Spark Packages are searched.
    #[serde(rename = "repo", skip_serializing_if = "Option::is_none")]
    pub repo: Option<String>,
    /// List of dependences to exclude. For example: `[\"slf4j:slf4j\", \"*:hadoop-client\"]`.  Maven dependency exclusions: <https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html>.
    #[serde(rename = "exclusions", skip_serializing_if = "Option::is_none")]
    pub exclusions: Option<Vec<String>>,
}

impl MavenLibrary {
    pub fn new(coordinates: String) -> MavenLibrary {
        MavenLibrary {
            coordinates,
            repo: None,
            exclusions: None,
        }
    }
}


